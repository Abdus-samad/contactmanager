{"version":3,"sources":["Context.js","component/contacts/Contact.js","component/contacts/Contacts.js","component/layout/Header.js","component/layout/TextInputGroup.js","component/contacts/AddContact.js","component/contacts/EditContact.js","component/pages/About.js","component/Test/Test.js","component/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","a","delete","name","email","phone","className","onClick","style","cursor","float","color","bind","to","marginRight","Contacts","Fragment","key","Header","branding","href","defaultProps","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","onSubmit","e","preventDefault","newContact","post","history","push","target","EditContact","updContact","match","params","put","Test","title","body","fetch","then","response","json","App","exact","path","component","About","NotFound","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.981c7023.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n import axios from 'axios'\r\nconst Context = React.createContext();\r\nconst reducer = (state, action) => {\r\n    switch(action.type) {\r\n        case 'DELETE_CONTACT':\r\n        return {\r\n        ...state,\r\n        contacts: state.contacts.filter(contact =>\r\n            contact.id !== action.payload)\r\n        };\r\n        case 'ADD_CONTACT':\r\n        return {\r\n        ...state,\r\n            contacts: [action.payload, \r\n            ...state.contacts]\r\n        };\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n            ...state,\r\n                contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact =\r\n                    action.payload) : contact )\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}; \r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [],\r\n\r\n        dispatch: action => this.setState(state => \r\n            reducer(state, action))\r\n    };\r\n    async componentDidMount() {\r\n        const res = await axios\r\n     .get('https://jsonplaceholder.typicode.com/users');\r\n     this.setState({contacts: res.data});\r\n     \r\n  }\r\n    \r\n    render() {\r\n        return (\r\n            <Context.Provider  value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n            );\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { Consumer } from  '../../Context';\r\nimport axios from 'axios'\r\nclass Contact extends Component {\r\n    state = {\r\n       showContactInfo: false \r\n    };\r\n   onDeleteClick =async (id, dispatch) => {\r\n       try{\r\n\r\n    await axios\r\n    .delete\r\n    (`https://jsonplaceholder.typicode.com/users/${id}`);\r\n    dispatch({type: 'DELETE_CONTACT', payload: id });\r\n       } catch(e){\r\n        dispatch({type: 'DELETE_CONTACT', payload: id }); \r\n       }\r\n   };\r\n\r\n\r\n    render() {\r\n        const {id,name, email, phone} = this.props.contact;\r\n        const { showContactInfo } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value =>{\r\n                    const {dispatch} = value;\r\n                  return (\r\n                    <div className=\"card card-body mb-3\">\r\n                    <h4>{name}{' '}\r\n    \r\n                    <i \r\n                    onClick={() => \r\n                        this.setState({ showContactInfo:!this.state.showContactInfo })\r\n                } \r\n                className=\"fa fa-sort-down\"\r\n                style={{ cursor: 'pointer'}}\r\n                ></i>\r\n\r\n                <i className=\"fas fa-times\"  style={{ cursor: 'pointer', float: 'right', color: 'red'}}\r\n                onClick={this.onDeleteClick.bind(this, id, dispatch)}></i>\r\n\r\n                <Link to={`contact/edit/${id}`}>\r\n                    <i className=\"fa fa-pencil-alt\" \r\n                     style={{\r\n                        cursor: \"pointer\",\r\n                        float:  \"right\",\r\n                        color:  \"black\",\r\n                      marginRight: '1rem'  \r\n                    }}></i>\r\n                   \r\n                </Link>\r\n\r\n                    </h4>\r\n                    {showContactInfo ? (<ul className=\"list-group\">\r\n            <li className=\"list-group-item\">Email: {email}</li>\r\n            <li className=\"list-group-item\">Phone: {phone}</li>\r\n                    </ul>) : null}\r\n                    \r\n                </div>\r\n                  ) \r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\nContact.propTypes = {\r\n    contact: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport { Consumer } from  '../../Context'\r\n\r\nclass Contacts extends Component {\r\n    \r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { contacts} = value\r\n                    return(\r\n                    <React.Fragment>\r\n                    <h1 className=\"display-4 mb-2\"><span className=\"text-danger\">Contact</span> List</h1>\r\n                {contacts.map(contact =>(\r\n                <Contact \r\n                 key={contact.id} \r\n                   contact={contact} \r\n                  />\r\n                  ))}\r\n            </React.Fragment>\r\n                    );\r\n                \r\n            }}\r\n            </Consumer>\r\n        );\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = props => {\r\n    const { branding } = props;\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n          <div className=\"container\">    <a className=\"navbar-brand\" href=\"#!\">{branding}</a>\r\n          <div><ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-items\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n              <i className=\"fas fa-home\"></i>Home </Link>\r\n            </li>\r\n            <li className=\"nav-items\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\"><i className=\"fas fa-plus\"></i>Add </Link>\r\n            </li>\r\n            <li className=\"nav-items\">\r\n              <Link to=\"/about\" className=\"nav-link\"><i className=\"fas fa-question\"></i>About </Link>\r\n            </li>\r\n          </ul>\r\n    </div>\r\n          \r\n    </div>\r\n    \r\n        \r\n      </nav>  \r\n \r\n        \r\n    );\r\n};\r\n\r\nHeader.defaultProps = {\r\n    branding: 'My App'\r\n};\r\n\r\nHeader.propTypes = { \r\n    branding: PropTypes.string.isRequired\r\n};\r\n\r\n\r\nexport default Header;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames('form-control form-control-lg', {\n          'is-invalid': error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n  type: 'text'\n};\n\nexport default TextInputGroup;\n","import React, { Component } from 'react';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport { Consumer } from  '../../Context';\nimport axios from 'axios'\n// import PropTypes from 'prop-types';\n\nclass AddContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    // Check For Errors\n    if (name === '') {\n      this.setState({ errors: { name: 'Name is required' } });\n      return;\n    }\n\n    if (email === '') {\n      this.setState({ errors: { email: 'Email is required' } });\n      return;\n    }\n\n    if (phone === '') {\n      this.setState({ errors: { phone: 'Phone is required' } });\n      return;\n    }\n\n    // this.props.addContact(newContact);\n    const newContact = {\n      name,\n      email,\n      phone\n    };\n   const res = await axios\n    .post(\n      'https://jsonplaceholder.typicode.com/users',\n      newContact);\n      dispatch({ type:'ADD_CONTACT', payload: \n    res.data})\n\n    // Clear State\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    this.props.history.push('/');\n  };\n\n  \n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\nreturn(\n  <Consumer>\n    {value => {\n      const { dispatch } = value;\n      return (\n        <div className=\"card mb-3\">\n          <div className=\"card-header\">Add Contact</div>\n          <div className=\"card-body\">\n            <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n              <TextInputGroup\n                label=\"Name\"\n                name=\"name\"\n                placeholder=\"Enter Name\"\n                value={name}\n                onChange={this.onChange}\n                error={errors.name}\n              />\n              <TextInputGroup\n                label=\"Email\"\n                name=\"email\"\n                type=\"email\"\n                placeholder=\"Enter Email\"\n                value={email}\n                onChange={this.onChange}\n                error={errors.email}\n              />\n              <TextInputGroup\n                label=\"Phone\"\n                name=\"phone\"\n                placeholder=\"Enter Phone\"\n                value={phone}\n                onChange={this.onChange}\n                error={errors.phone}\n              />\n              <input\n                type=\"submit\"\n                value=\"Add Contact\"\n                className=\"btn btn-light btn-block\"\n              />\n            </form>\n          </div>\n        </div>\n      );\n    }\n    \n    }\n  </Consumer>\n)\n    \n  }\n}\n\n// AddContact.propTypes = {\n  // addContact:  PropTypes.func.isRequired\n// };\n\nexport default AddContact;\n","import React, { Component } from 'react';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport { Consumer } from  '../../Context'\r\nimport axios from 'axios'\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n    const contact = res.data;\r\n\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    });\r\n  \r\n  }\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n        // Check For Errors\r\n        if (name === '') {\r\n          this.setState({ errors: { name: 'Name is required' } });\r\n          return;\r\n        }\r\n\r\n        if (email === '') {\r\n          this.setState({ errors: { email: 'Email is required' } });\r\n          return;\r\n        }\r\n\r\n        if (phone === '') {\r\n          this.setState({ errors: { phone: 'Phone is required' } });\r\n          return;\r\n        }\r\n\r\n\r\n        const updContact = {\r\n          name,\r\n          email,\r\n          phone\r\n        }\r\n\r\n      \r\n    const { id } = this.props.match.params;\r\n\r\n    const res = await \r\n    axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\r\n\r\ndispatch({type:'UPDATE_CONTACT', payload: res.data})\r\n    // Clear State\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return(\r\n<Consumer>\r\n    {value => {\r\n      const { dispatch } = value;\r\n      return (\r\n      <div className=\"card mb-3\">\r\n        <div className=\"card-header\">EditContact</div>\r\n        <div className=\"card-body\">\r\n          <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n            <TextInputGroup\r\n              label=\"Name\"\r\n              name=\"name\"\r\n              placeholder=\"Enter Name\"\r\n              value={name}\r\n              onChange={this.onChange}\r\n              error={errors.name}\r\n            />\r\n            <TextInputGroup\r\n              label=\"Email\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              placeholder=\"Enter Email\"\r\n              value={email}\r\n              onChange={this.onChange}\r\n              error={errors.email}\r\n            />\r\n            <TextInputGroup\r\n              label=\"Phone\"\r\n              name=\"phone\"\r\n              placeholder=\"Enter Phone\"\r\n              value={phone}\r\n              onChange={this.onChange}\r\n              error={errors.phone}\r\n            />\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Update Contact\"\r\n              className=\"btn btn-light btn-block\"\r\n            />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n      \r\n    }\r\n    \r\n    }\r\n  </Consumer>\r\n    );\r\n\r\n    \r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from 'react'\r\n\r\nexport default  () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">About Contact Manager</h1>\r\n            <p className=\"lead\">Simple app to mange contacts</p>  \r\n            <p className=\"text-secondary\">Version 2.0.0</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\n class Test extends Component {\r\n    state= {\r\n    title: '',\r\n    body: '',\r\n    };\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/todos/1')\r\n  .then(response => response.json())\r\n  .then(data => this.setState({\r\n        title: data.title,\r\n        body: data.body\r\n  }));\r\n    }\r\n    render() {\r\n        const { title, body } = this.state;\r\n        return (\r\n            <div>\r\n                <h1>{title}</h1>\r\n                 <p>{body}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Test;","import React from 'react';\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404</span> Page Not Found\n      </h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  );\n};\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './component/contacts/Contacts';\nimport Header from './component/layout/Header';\nimport AddContact from './component/contacts/AddContact';\nimport EditContact from './component/contacts/EditContact';\nimport About from './component/pages/About';\nimport Test from './component/Test/Test';\nimport NotFound from './component/pages/NotFound';\nimport  {Provider}   from  './Context';\nimport './App.css';\nclass  App extends Component {\n  render() {\n  return (\n  <Provider> \n    <Router>\n       <div className=\"App\">\n        <Header branding=\"Contact Manager\" />\n         <div className=\"container\">\n        <Switch>\n            <Route exact path=\"/\" component={Contacts} />\n            <Route exact path=\"/about\" component={About} />\n            <Route exact path=\"/test\" component={Test} />\n            <Route exact path=\"/contact/add\" component={AddContact} />\n            <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n            <Route component={NotFound} />\n        </Switch>\n          </div>\n        </div>\n      </Router>\n  </Provider>\n  \n  );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}